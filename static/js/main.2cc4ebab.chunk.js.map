{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","_jsx","className","children","_jsxs","id","type","style","Navbar","concat","Link","to","title","aboutText","onClick","toggleMode","htmlFor","TextForm","mystyle","text","setText","useState","_Fragment","heading","placeholder","onChange","event","target","value","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleCopyClick","navigator","clipboard","writeText","then","handleExtraSpaces","split","join","handleClearClick","filter","element","item","display","justifyContent","paddingEnd","Alert","height","alert","class","role","word","lower","charAt","slice","capitalize","msg","defaultProps","Footer","bottom","textAlign","App","setMode","setAlert","message","setTimeout","Router","document","body","changeBgColor","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cc4ebab.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function About(props) {\n\n    let myStyle = {\n        color: props.mode==='dark' ? 'white' : 'black',\n        backgroundColor: props.mode==='dark' ? '#042743' : 'white'\n    }\n    return (\n        <div className=\"container my-5\">\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\n                            <strong>Analyze your text</strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle}>\n                            Texttoolkit gives you a way to analyze your text quickly and efficiently. Be it word count, character count or reading time.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\n                            <strong>Free to use</strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle}>\n                            Texttoolkit is a free character counter tool that provides instant character count & word count statistics for a given text. Texttoolkit reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\n                            <strong>Browser Compatible</strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle}>\n                            This word counter software works in any web browsers such as Chrome, Firefox, IE, Safari, Opera. It suits to count characters in Facebook, Blog, Books, Excel Document, PDF Document, Essays etc.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from \"react-router-dom\";\n\nexport default function Navbar(props) {\n\n    // const changeBackgrounColor = ()=>{\n    //     let bgColor = document.getElementById('bgColor').value;\n    //     props.changeBgColor(bgColor)\n    // }\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li>\n                    </ul>\n                    {/* <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" id=\"bgColor\" type=\"search\" placeholder=\"Enter Color\" aria-label=\"Color\" />\n                        <button className=\"btn btn-primary me-2\" onSubmit={changeBackgrounColor} type=\"submit\">Apply</button>\n                    </form> */}\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>                    \n                </div>\n            </div>\n        </nav>\n    )\n}\n// Prop Type Checking\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string\n}\n// Setting Default Props if not passed\nNavbar.defaultProps = {\n    title: \"Title Here...\",\n    aboutText: \"About\"\n}","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n\n    // Convert to Uppercase\n    const handleUpClick = () => {\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Uppercase\", \"success\");\n    }\n    // Convert to Lowercase\n    const handleLoClick = () => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lowercase\", \"success\");\n    }\n    // Remove Extra Spaces\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Removed Extra Spaces\", \"success\");\n    }\n    //Clear Text\n    const handleClearClick = () => {\n        let newText = '';\n        setText(newText);\n    }\n    // Copy to clipboard\n    const handleCopyClick = () => {\n        navigator.clipboard.writeText(text).then(function () {\n            props.showAlert(\"Copied to clipboard!\", \"success\");\n        });\n    }\n    // OnChange in TextArea\n    const handleChange = (event) => {\n        setText(event.target.value)\n    }\n\n    let style = {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingEnd: 5,\n    }\n    let mystyle = {\n       color:props.mode === 'dark' ? 'white' :'black'\n    }\n\n    const [text, setText] = useState('');\n    return (\n        <>\n            <div className=\"container my-5\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" placeholder=\"Enter your text here...\" style={{ backgroundColor: props.mode === 'dark' ? 'white' : '#042743', color: props.mode === 'dark' ? 'black' : 'white' }} onChange={handleChange} value={text} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-2\" onClick={handleUpClick} >Convert to Uppercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-2\" onClick={handleLoClick} >Convert to Lowercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-2\" onClick={handleCopyClick} >Copy to Clipboard</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-2\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\n                <button disabled={text.length === 0} className=\"btn btn-danger mx-1 my-2\" onClick={handleClearClick} >Clear Text</button>\n            </div>\n\n            {/*<div className=\"container my-4 mx-1\" style={{color: props.mode==='dark'? 'white' : 'black'}}>\n                <h1>Text Summary</h1>\n                <p>Number of words: {text.split(\" \").filter(item => item!=='').length} </p>\n                <p>Number of characters: {text.length}</p>\n                <p>{0.08 * text.split(\" \").filter(item => item!=='').length} minutes read </p>\n                <h2>Preview</h2>\n                <p>{text.length>0 ? text : 'Nothing to preview.'}</p>\n            </div>*/}\n            <div className=\"container part-2 d-flex\">\n                <div className=\"wordsCount text-center\">\n                    <h2>Number of words : {text.split(\" \").filter((element)=>{return element.length!==0}).length}</h2>\n                </div>\n                <div className=\"lettersCount text-center\">\n                    <h2>Number of characters : {text.length}</h2>\n                </div>\n            </div>\n            <div className=\"container previewAndReadTime my-5 \">\n                <div className=\"pund text-center my-3\">\n                    <h3 id=\"previewText\" style={mystyle}>Preview : {0.08 * text.split(\" \").filter(item => item !== '').length} minutes read</h3>\n                    <div style={style}>\n                        <div id=\"underLine\"></div>\n                    </div>\n                </div>\n                <p>{text}</p>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div className=\"my-2\" style={{height:'50px'}}>\n            {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                {capitalize(props.alert.type)}: {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Footer(props) {\n    let myStyle = {\n        color: props.mode==='dark' ? 'black' : 'white',\n        backgroundColor: props.mode==='dark' ? 'white': 'rgb(4, 39, 67)',\n        bottom: '0px',\n        textAlign:'center'\n        \n    }\n    return (\n            <div className=\"footer container my-5\">\n                <footer className=\"text-center\" style={myStyle}>\n                <div className=\"text-center p-1\" >\n                Copyright &copy; Texttoolkit.com | All rights reserved.\n                </div>\n                </footer>\n            </div>\n    )\n}\n\n\nexport default Footer\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {useState} from 'react';\nimport Alert from './components/Alert';\nimport React, {Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  // const [bgColor, setBgColor] = useState('white')\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    }, 1800);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark Mode Enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode Enabled', 'success');\n    }\n  }\n\n  const changeBgColor = (color)=>{\n    document.body.style.backgroundColor = color;\n  }\n  return (\n      \n      \n        <>\n          {/* Different kind of props passed to the Navbar component */}\n          {/* <Navbar /> */}\n          <Router>\n            <Navbar title=\"Texttoolkit\" mode={mode} toggleMode={toggleMode} changeBgColor={changeBgColor}/>\n            <div className=\"container\">\n            <Alert alert={alert}/>\n            <Switch>\n              {/* Always use exact path, otherwise react router try to match partially.  */}\n              <Route exact path=\"/about\">\n                <About mode={mode} />\n              </Route>\n              <Route exact path=\"/\">\n                <TextForm heading=\"Enter the text to analyze below\" showAlert={showAlert} mode={mode} />\n              </Route>\n            </Switch>\n            </div>\n            <Footer mode={mode}/>\n          </Router>\n        </>\n        \n      \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}